// Code generated by MockGen. DO NOT EDIT.
// Source: tailer.go

// Package mock_tailer is a generated GoMock package.
package mock_tailer

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockTailerT is a mock of TailerT interface
type MockTailerT struct {
	ctrl     *gomock.Controller
	recorder *MockTailerTMockRecorder
}

// MockTailerTMockRecorder is the mock recorder for MockTailerT
type MockTailerTMockRecorder struct {
	mock *MockTailerT
}

// NewMockTailerT creates a new mock instance
func NewMockTailerT(ctrl *gomock.Controller) *MockTailerT {
	mock := &MockTailerT{ctrl: ctrl}
	mock.recorder = &MockTailerTMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTailerT) EXPECT() *MockTailerTMockRecorder {
	return m.recorder
}

// Next mocks base method
func (m *MockTailerT) Next() ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Next")
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Next indicates an expected call of Next
func (mr *MockTailerTMockRecorder) Next() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Next", reflect.TypeOf((*MockTailerT)(nil).Next))
}
